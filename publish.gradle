apply plugin: 'maven-publish'
apply plugin: 'signing'

task androidSourcesJar(type: Jar) {
    classifier = 'sources'
    from android.sourceSets.main.java.source

    exclude "**/R.class"
    exclude "**/BuildConfig.class"
}

ext["signing.keyId"] = ''
ext["signing.password"] = ''
ext["signing.secretKeyRingFile"] = ''
ext["ossrhUsername"] = ''
ext["ossrhPassword"] = ''

File secretPropsFile = project.rootProject.file('local.properties')
if (secretPropsFile.exists()) {
    println "Found secret props file, loading props"
    Properties p = new Properties()
    p.load(new FileInputStream(secretPropsFile))
    p.each { name, value ->
        ext[name] = value
    }
} else {
    println "No props file, loading env vars"
}
publishing {
    publications {
        release(MavenPublication) {
            groupId PUBLISH_GROUP_ID
            artifactId PUBLISH_ARTIFACT_ID
            version PUBLISH_VERSION

            artifact("$buildDir/outputs/aar/${project.getName()}-release.aar")
            artifact androidSourcesJar

            pom {
                name = PUBLISH_ARTIFACT_ID
                description = 'An eWAY Rapid Android SDK'
                url = 'https://github.com/eWAYPayment/eway-rapid-android'
                licenses {
                    license {
                        name = 'MIT License (MIT)'
                        url = 'https://github.com/eWAYPayment/eway-rapid-android/blob/master/LICENSE.md'
                    }
                }
                developers {
                    developer {
                        id = 'eway'
                        name = 'eWAY'
                        email = 'partner@eway.com.au'
                    }
                }
                scm {
                    connection = 'scm:git@github.com:eWAYPayment/eway-rapid-android.git'
                    developerConnection = 'scm:git:ssh://github.com/eWAYPayment/eway-rapid-android.git'
                    url = 'https://github.com/eWAYPayment/eway-rapid-android/tree/master'
                }
                withXml {
                    def dependenciesNode = asNode().appendNode('dependencies')
                    project.configurations.implementation.allDependencies.each {
                        def dependencyNode = dependenciesNode.appendNode('dependency')
                        dependencyNode.appendNode('groupId', it.group)
                        dependencyNode.appendNode('artifactId', it.name)
                        dependencyNode.appendNode('version', it.version)
                    }
                }
            }
        }
    }
    repositories {
        maven {
            name = "mavenCentral"
            def releasesRepoUrl = "https://oss.sonatype.org/service/local/staging/deploy/maven2/"
            def snapshotsRepoUrl = "https://oss.sonatype.org/content/repositories/snapshots/"
            url = PUBLISH_VERSION.endsWith("SNAPSHOT") ? snapshotsRepoUrl : releasesRepoUrl
            println PUBLISH_VERSION
            println url

            credentials {
                username ossrhUsername
                password ossrhPassword
            }
        }
    }
}
signing {
    sign publishing.publications
}